version: "3.4"

services:

  gost-db:
    image: geodan/gost-db
#    image: 127.0.0.1:5001/gost-db
#    build: gost-db/
    restart: always
    volumes:
#      - /mnt/glusterfs/gost-db/data:/data
      - postgis:/var/lib/postgresql/data
    environment:
        POSTGRES_DB: gost
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
    deploy:
      placement:
        constraints:
          - node.labels.kafka==82
      resources:
        limits:
          cpus: "1"
          memory: 4G
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure


  gost:
    image: geodan/gost
    restart: always
    volumes:
        - gost_conf:/gostserver/config
    depends_on:
        # - mosquitto
        - gost-db
    environment:
        GOST_DB_HOST: gost-db
        GOST_SERVER_EXTERNAL_URI: http://il081:8084
        GOST_SERVER_MAX_ENTITIES: 200
        # GOST_MQTT_HOST: mosquitto
    deploy:
      placement:
        constraints:
          - node.labels.kafka==82
      resources:
        limits:
          cpus: "1"
          memory: 4G
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure


  dashboard:  # service reachable from kafka stack with: wget  --method GET   --output-document   - 'http://dashboard:8080/v1.0/Things(3)'
    image: geodan/gost-dashboard
    restart: always
    ports:  # use port 8080 for internal requests
      - 8084:8080
    depends_on:
      - gost
    deploy:
      placement:
        constraints: 
          - node.labels.kafka==82
      resources:
        limits:
          cpus: "1"
          memory: 4G
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure



volumes:
  postgis: {}
  nodered: {}
  gost_conf: {}
  mosquitto_data: {}
  mosquitto_conf: {}

